import {Contact, ContactImpl, ContactFromRecord, CreateContact} from "domain/contact/Contact";
import WaitFor from "framework/WaitFor";
const Promise = require("promise");
const uuidProvider = require("node-uuid");

export function MakeContactGateway (schema?: any, wait?: any) {
    return new ContactGateway (schema || ContactImpl.SCHEMA, wait || WaitFor)
}

export class ContactGateway {
    private schema: any;
    private wait: any;

    constructor (schema: any, wait: any) {
        this.schema = schema;
        this.wait = wait;
    }
    public create(contact: CreateContact): Contact {
        var self = this;
        return this.wait (new Promise(function (resolve, reject){
            self.schema.create({
                contactId: uuidProvider.v4(),
                surName: contact.surName,
                name:contact.name,
                email:contact.email,
                phoneNumber:contact.phoneNumber,
                message:contact.message,
                contactDate: contact.contactDate
            }).then(function (user){
                resolve(ContactFromRecord(contact));
            }).catch(function (err) {
                reject(err);
            })
        }))
    }
}