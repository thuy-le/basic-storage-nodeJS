import {SequelizeClass, SequelizeConnection} from "./SequelizeClass";
const waitFor = require("wait.for");
const winston = require("winston");
import WaitFor from "framework/WaitFor";


export class Initializer {

    private connection: SequelizeConnection;
    private wait: any;

    constructor(connection?: SequelizeConnection, wait?: any) {
        this.connection = connection || SequelizeClass.getConnection();
        this.wait = wait || WaitFor;
    }

    public init() {        
        winston.info(`*****APP INITIALIZATION*****`);
        return new Promise((resolve: any, reject: any) => waitFor.launchFiber(() => {
            this.ping();
            resolve();
        }));
    }

    private ping() {
        const connConfig = this.connection.configuration;
        winston.info(`PING ${connConfig.options.host}:${connConfig.options.port}/${connConfig.username}@${connConfig.database}`);
        while (true) {
            try {
                const result = this.wait(this.connection.connection.query("SELECT 1 as Pong"));
                if (result) {
                    break;
                }
            } catch (e) {
                winston.debug(e);
            }
            winston.info("No db connection. Ping again...");
            this.wait(new Promise(function(resolve: any, reject: any) {
                setTimeout(resolve, 10000);
            }));
        }

        winston.info("DATABASE PONG");
    }

}
