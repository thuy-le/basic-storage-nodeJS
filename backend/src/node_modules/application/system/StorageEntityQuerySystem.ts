import {MakeStorageEntityGateway, StorageEntityGateway} from "gateway/storage-entity/StorageEntityGateway";
import {MakeStorageEntityHistoryGateway, StorageEntityHistoryGateway} from "gateway/storage-entity/StorageEntityHistoryGateway";
import {ValidTimestamp} from "domain/storage-entity/StorageEntityHistory";

export function MakeStorageEntityQuerySystem(gateway?: StorageEntityGateway, historyGateway?: StorageEntityHistoryGateway) {
    return new StorageEntityQuerySystem(gateway || MakeStorageEntityGateway(), historyGateway || MakeStorageEntityHistoryGateway());
}

class StorageEntityQuerySystem {
    private gateway: StorageEntityGateway;
    private historyGateway: StorageEntityHistoryGateway;

    constructor(gateway: StorageEntityGateway, historyGateway: StorageEntityHistoryGateway) {
        this.gateway = gateway;
        this.historyGateway = historyGateway;
    }

    public getData(key: string, timestamp: ValidTimestamp) {        
        const data = !timestamp ? 
            this.gateway.findByKey(key) : 
            this.historyGateway.findByKeyAndTimestamp(key, new Date(parseInt(timestamp.value)));
        return data ? data.getValue() : null;
    }

}
