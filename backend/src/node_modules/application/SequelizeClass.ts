import {Sequelize} from "sequelize";
const _sequelize = require("sequelize");
import Configuration from "./Configuration";


export interface SequelizeConnection {
    configuration: any;
    connection: Sequelize;
    Sequelize: any;
}

export class SequelizeClass {
    
    private static instance: SequelizeClass = new SequelizeClass();
    private sequelizeConnection: Sequelize;

    constructor() {
        if (SequelizeClass.instance) {
            throw new Error("Error: Instantiation failed. Use SequelizeClass.getInstance()");
        }
        this.sequelizeConnection = new _sequelize(
            Configuration.sequelize.database,
            Configuration.sequelize.username,
            Configuration.sequelize.password,
            Configuration.sequelize.options
        );
        SequelizeClass.instance = this;
    }

    public static getInstance(): SequelizeClass {
        return SequelizeClass.instance;
    }

    public static getConnection(): SequelizeConnection {
        return SequelizeClass.instance.connection;
    }

    get connection(): SequelizeConnection {
        return {
            configuration: Configuration.sequelize,
            connection: this.sequelizeConnection,
            Sequelize: _sequelize,
        }
    }
}