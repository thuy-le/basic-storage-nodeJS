import {Routing} from "../Routing";
import {MakeStorageEntityCommandSystem} from "application/system/StorageEntityCommandSystem";
import {MakeStorageEntityQuerySystem} from "application/system/StorageEntityQuerySystem";
import {ValidTimestamp} from "domain/storage-entity/StorageEntityHistory";


export default class StorageRouting implements Routing {

    public handlers() {
        return {
            get: (req: any) => {
                const timestamp = req.query.timestamp ? new ValidTimestamp(req.query.timestamp) : null;
                return MakeStorageEntityQuerySystem().getData(req.params.key, timestamp);
            },
            create: (req: any) => {
                const keys = Object.keys(req.body);
                keys.forEach((key: string) => {
                    MakeStorageEntityCommandSystem().createStorageEntity({
                        key: key,
                        value: req.body[key],
                    });
                });
                return Date.now();
            },
        };
    }

    public fillRoutes(router: any, handlers: any) {
        router.get("/object/:key", handlers.get);
        router.post("/object", handlers.create);
    }
}
